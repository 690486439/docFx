items:
- uid: IronRuby.Builtins.Glob
  id: Glob
  parent: IronRuby.Builtins
  children:
  - IronRuby.Builtins.Glob.FnMatch(System.String,System.String,System.Int32)
  - IronRuby.Builtins.Glob.GetMatches(System.String,System.Int32)
  - IronRuby.Builtins.Glob.GetMatches(System.String,System.String,System.Int32,System.Func{System.String,System.Collections.Generic.IEnumerable{System.String}})
  href: IronRuby.Builtins.Glob.yml
  name: Glob
  fullName: IronRuby.Builtins.Glob
  type: Class
  source:
    remote: &o0
      path: src/Microsoft.DocAsCode.Utility/Glob/Glob.cs
      branch: dev
      repo: https://github.com/aspnet/docfx.git
      key: bc9c22b4
    path: src/Microsoft.DocAsCode.Utility/Glob/Glob.cs
    startLine: 25
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: IronRuby.Builtins
  syntax:
    content: public class Glob
    content.vb: Public Class Glob
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: IronRuby.Builtins.Glob.FnMatch(System.String,System.String,System.Int32)
  id: FnMatch(System.String,System.String,System.Int32)
  parent: IronRuby.Builtins.Glob
  href: IronRuby.Builtins.Glob.yml
  name: FnMatch(String, String, Int32)
  fullName: IronRuby.Builtins.Glob.FnMatch(System.String, System.String, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Glob/Glob.cs
    startLine: 137
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: IronRuby.Builtins
  syntax:
    content: public static bool FnMatch(string pattern, string path, int flags)
    content.vb: Public Shared Function FnMatch(pattern As String, path As String, flags As Integer) As Boolean
    parameters:
    - id: pattern
      type: System.String
    - id: path
      type: System.String
    - id: flags
      type: System.Int32
    return:
      type: System.Boolean
      description: 
- uid: IronRuby.Builtins.Glob.GetMatches(System.String,System.Int32)
  id: GetMatches(System.String,System.Int32)
  parent: IronRuby.Builtins.Glob
  href: IronRuby.Builtins.Glob.yml
  name: GetMatches(String, Int32)
  fullName: IronRuby.Builtins.Glob.GetMatches(System.String, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Glob/Glob.cs
    startLine: 627
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: IronRuby.Builtins
  syntax:
    content: public static IEnumerable<string> GetMatches(string pattern, int flags)
    content.vb: Public Shared Function GetMatches(pattern As String, flags As Integer) As IEnumerable(Of String)
    parameters:
    - id: pattern
      type: System.String
    - id: flags
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: 
- uid: IronRuby.Builtins.Glob.GetMatches(System.String,System.String,System.Int32,System.Func{System.String,System.Collections.Generic.IEnumerable{System.String}})
  id: GetMatches(System.String,System.String,System.Int32,System.Func{System.String,System.Collections.Generic.IEnumerable{System.String}})
  parent: IronRuby.Builtins.Glob
  href: IronRuby.Builtins.Glob.yml
  name: GetMatches(String, String, Int32, Func<String, IEnumerable<String>>)
  name.vb: GetMatches(String, String, Int32, Func(Of String, IEnumerable(Of String)))
  fullName: IronRuby.Builtins.Glob.GetMatches(System.String, System.String, System.Int32, System.Func<System.String, System.Collections.Generic.IEnumerable<System.String>>)
  fullName.vb: IronRuby.Builtins.Glob.GetMatches(System.String, System.String, System.Int32, System.Func(Of System.String, System.Collections.Generic.IEnumerable(Of System.String)))
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Glob/Glob.cs
    startLine: 632
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: IronRuby.Builtins
  syntax:
    content: public static IEnumerable<string> GetMatches(string baseDirectory, string pattern, int flags, Func<string, IEnumerable<string>> filesProvider)
    content.vb: Public Shared Function GetMatches(baseDirectory As String, pattern As String, flags As Integer, filesProvider As Func(Of String, IEnumerable(Of String))) As IEnumerable(Of String)
    parameters:
    - id: baseDirectory
      type: System.String
    - id: pattern
      type: System.String
    - id: flags
      type: System.Int32
    - id: filesProvider
      type: System.Func{System.String,System.Collections.Generic.IEnumerable{System.String}}
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: 
references:
- uid: IronRuby.Builtins
  isExternal: false
  name: IronRuby.Builtins
  fullName: IronRuby.Builtins
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  name.vb: IEnumerable(Of String)
  fullName: System.Collections.Generic.IEnumerable<System.String>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Func{System.String,System.Collections.Generic.IEnumerable{System.String}}
  parent: System
  definition: System.Func`2
  name: Func<String, IEnumerable<String>>
  name.vb: Func(Of String, IEnumerable(Of String))
  fullName: System.Func<System.String, System.Collections.Generic.IEnumerable<System.String>>
  fullName.vb: System.Func(Of System.String, System.Collections.Generic.IEnumerable(Of System.String))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func`2
  parent: System
  isExternal: true
  name: Func<T, TResult>
  name.vb: Func(Of T, TResult)
  fullName: System.Func<T, TResult>
  fullName.vb: System.Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
